// <auto-generated />
using System;
using MVCD2.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVCD2.Migrations
{
    [DbContext(typeof(CompanyContext))]
    [Migration("20250304081147_addDepartmentIdInINstructors")]
    partial class addDepartmentIdInINstructors
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVCD2.Models.Course_Students", b =>
                {
                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("Degree")
                        .HasColumnType("int");

                    b.HasKey("CourseId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("courses_students");
                });

            modelBuilder.Entity("MVCD2.Models.Courses", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("InstructorsId")
                        .HasColumnType("int");

                    b.Property<int>("MinDegree")
                        .HasColumnType("int");

                    b.Property<string>("Topic")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("InstructorsId");

                    b.ToTable("courses");
                });

            modelBuilder.Entity("MVCD2.Models.Departments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DepartmentDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("departments");
                });

            modelBuilder.Entity("MVCD2.Models.Instructors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentsId")
                        .HasColumnType("int");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("HireDate")
                        .HasColumnType("date");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentsId");

                    b.ToTable("instructors");
                });

            modelBuilder.Entity("MVCD2.Models.students", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int?>("DepartmentsId")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentsId");

                    b.ToTable("students");
                });

            modelBuilder.Entity("MVCD2.Models.Course_Students", b =>
                {
                    b.HasOne("MVCD2.Models.Courses", "Courses")
                        .WithMany("course_students")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MVCD2.Models.students", "students")
                        .WithMany("course_students")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Courses");

                    b.Navigation("students");
                });

            modelBuilder.Entity("MVCD2.Models.Courses", b =>
                {
                    b.HasOne("MVCD2.Models.Instructors", "Instructors")
                        .WithMany("courses")
                        .HasForeignKey("InstructorsId");

                    b.Navigation("Instructors");
                });

            modelBuilder.Entity("MVCD2.Models.Instructors", b =>
                {
                    b.HasOne("MVCD2.Models.Departments", "Departments")
                        .WithMany("instructors")
                        .HasForeignKey("DepartmentsId");

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("MVCD2.Models.students", b =>
                {
                    b.HasOne("MVCD2.Models.Departments", "Departments")
                        .WithMany("students")
                        .HasForeignKey("DepartmentsId");

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("MVCD2.Models.Courses", b =>
                {
                    b.Navigation("course_students");
                });

            modelBuilder.Entity("MVCD2.Models.Departments", b =>
                {
                    b.Navigation("instructors");

                    b.Navigation("students");
                });

            modelBuilder.Entity("MVCD2.Models.Instructors", b =>
                {
                    b.Navigation("courses");
                });

            modelBuilder.Entity("MVCD2.Models.students", b =>
                {
                    b.Navigation("course_students");
                });
#pragma warning restore 612, 618
        }
    }
}
